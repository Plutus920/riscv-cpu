$date
	Wed Jul 30 09:01:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 32 ! out [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$var reg 4 $ opcode [3:0] $end
$scope module DUT $end
$var wire 32 % a [31:0] $end
$var wire 32 & b [31:0] $end
$var wire 4 ' opcode [3:0] $end
$var wire 1 ( shift_dir $end
$var wire 32 ) shift_output [31:0] $end
$var wire 1 * shift_arith $end
$var reg 32 + out [31:0] $end
$scope module shifter_inst $end
$var wire 1 * arith $end
$var wire 1 ( dir $end
$var wire 32 , in [31:0] $end
$var wire 5 - n [4:0] $end
$var wire 32 . out [31:0] $end
$var reg 32 / result [31:0] $end
$var reg 32 0 shift_left_1 [31:0] $end
$var reg 32 1 shift_left_16 [31:0] $end
$var reg 32 2 shift_left_2 [31:0] $end
$var reg 32 3 shift_left_4 [31:0] $end
$var reg 32 4 shift_left_8 [31:0] $end
$var reg 32 5 shift_right_1 [31:0] $end
$var reg 32 6 shift_right_16 [31:0] $end
$var reg 32 7 shift_right_2 [31:0] $end
$var reg 32 8 shift_right_4 [31:0] $end
$var reg 32 9 shift_right_8 [31:0] $end
$var reg 32 : shift_right_fill [31:0] $end
$upscope $end
$upscope $end
$scope task test_alu $end
$var reg 32 ; expected [31:0] $end
$var reg 4 < op [3:0] $end
$var reg 32 = rs_a [31:0] $end
$var reg 32 > rs_b [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 >
b1010 =
b1 <
b11001 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b1010000000000000000 4
b10100000000 3
b1010000 2
b1010000000000000000 1
b10100 0
b1010000000000000000 /
b1010000000000000000 .
b1111 -
b1010 ,
b11001 +
0*
b1010000000000000000 )
0(
b1 '
b1111 &
b1010 %
b1 $
b1111 #
b1010 "
b11001 !
$end
#5
b100011000000000000000 1
b100011000000000000000 4
b1000110000000 3
b100011000 2
b1000110 0
b100011000000000000000 )
b100011000000000000000 .
b100011000000000000000 /
b10100 !
b10100 +
b100011 "
b100011 %
b100011 ,
b10 $
b10 '
b10100 ;
b100011 =
b10 <
#10
b10000000000001111000000000000000 1
b10000000000001111000000000000000 4
b11111111100000000000011110000000 3
b1111111111110000000000001111000 2
b11111111111100000000000011110 0
b10000000000001111000000000000000 )
b10000000000001111000000000000000 .
b10000000000001111000000000000000 /
b111111110000000000001111 !
b111111110000000000001111 +
b11110000111111110000111100001111 #
b11110000111111110000111100001111 &
b1111111111110000000000001111 "
b1111111111110000000000001111 %
b1111111111110000000000001111 ,
b11 $
b11 '
b111111110000000000001111 ;
b11110000111111110000111100001111 >
b1111111111110000000000001111 =
b11 <
#15
b0 -
b1111111111111111 1
b1111111111111111 4
b1111111111111111 3
b1111111111111111 2
b1111111111111111 0
b1111111111111111 )
b1111111111111111 .
b1111111111111111 /
b11111111111111111111111111111111 !
b11111111111111111111111111111111 +
b11111111111111110000000000000000 #
b11111111111111110000000000000000 &
b1111111111111111 "
b1111111111111111 %
b1111111111111111 ,
b100 $
b100 '
b11111111111111111111111111111111 ;
b11111111111111110000000000000000 >
b1111111111111111 =
b100 <
#20
b10101 -
b1010101010000000000000000000000 1
b1010101010101010101010101000000 4
b1010101010101010101010101000000 3
b1010101010101010101010101010100 2
b1010101010101010101010101010100 0
b1010101010000000000000000000000 )
b1010101010000000000000000000000 .
b1010101010000000000000000000000 /
b11111111111111111111111111111111 !
b11111111111111111111111111111111 +
b1010101010101010101010101010101 #
b1010101010101010101010101010101 &
b10101010101010101010101010101010 "
b10101010101010101010101010101010 %
b10101010101010101010101010101010 ,
b101 $
b101 '
b1010101010101010101010101010101 >
b10101010101010101010101010101010 =
b101 <
#25
b100 -
b10000 1
b10000 4
b10000 3
b1 2
b1 0
b10000 )
b10000 .
b10000 /
b10000 !
b10000 +
b100 #
b100 &
b1 "
b1 %
b1 ,
b110 $
b110 '
b10000 ;
b100 >
b1 =
b110 <
#30
b1000000000000000000000000 6
b1000000000000000000000000 9
b1000000000000000000000000 8
b10000000000000000000000000000 7
b10000000000000000000000000000 5
b0 1
b0 4
b0 3
b0 2
b0 0
b1000000000000000000000000 )
b1000000000000000000000000 .
b1000000000000000000000000 /
b1000000000000000000000000 !
b1000000000000000000000000 +
1(
b10000000000000000000000000000 "
b10000000000000000000000000000 %
b10000000000000000000000000000 ,
b111 $
b111 '
b1000000000000000000000000 ;
b10000000000000000000000000000 =
b111 <
#35
b11111000000000000000000000000000 !
b11111000000000000000000000000000 +
b11111111111111111111111111111111 :
b11111000000000000000000000000000 6
b11111000000000000000000000000000 9
b11111000000000000000000000000000 8
b10000000000000000000000000000000 7
b10000000000000000000000000000000 5
b11111000000000000000000000000000 )
b11111000000000000000000000000000 .
b11111000000000000000000000000000 /
b10000000000000000000000000000000 "
b10000000000000000000000000000000 %
b10000000000000000000000000000000 ,
1*
b1000 $
b1000 '
b11111000000000000000000000000000 ;
b10000000000000000000000000000000 =
b1000 <
#40
